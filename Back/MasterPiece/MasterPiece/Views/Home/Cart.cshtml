@model IEnumerable<MasterPiece.Models.Product>

@{
    ViewBag.Title = "Cart";
    Layout = "~/Views/Shared/MainLayout.cshtml";
}

<div class="breadcrumb-section breadcrumb-bg" style="background-image: url(../../assets/img/CartBG.png);">
    <div class="container">
        <div class="row">
            <div class="col-lg-8 offset-lg-2 text-center">
                <div class="breadcrumb-text">
                    <h1>Cart</h1>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- end breadcrumb section -->
<!-- cart -->
<div class="cart-section mt-150 mb-150">
    <div class="container">
        <div class="row">
            <div class="col-lg-8 col-md-12">
                <div class="cart-table-wrap">
                    <table class="cart-table">
                        <thead class="cart-table-head">
                            <tr class="table-head-row">
                                <th class="product-remove"></th>
                                <th class="product-image">Product Image</th>
                                <th class="product-name">Name</th>
                                <th class="product-price">Unit Price</th>
                                <th class="product-quantity">Quantity</th>
                                <th class="product-total">Total</th>
                            </tr>
                        </thead>
                        <tbody>
                            @{double totalprice = 0; }

                            @foreach (var item in Model)
                            {


                                <tr class="table-body-row">
                                    <td class="product-remove"><a href="RemoveItem/@item.Product_id"><i class="far fa-window-close"></i></a></td>
                                    <td class="product-image"><img src="../../ProductImage/@item.Product_Image" style="height: 60px; width: 60px;" alt=""></td>
                                    <td class="product-name">@item.Product_Name</td>
                                    <td class="product-price">@item.Product_Price JD</td>
                                    <td class="product-quantity">
                                        <button class="quantity-btn minus" data-product-id="@item.Product_id" data-cart-quantity="@item.CartQuantity">-</button>
                                        <span type="number" class="quantity" placeholder="@item.CartQuantity">
                                            @item.CartQuantity
                                        </span>
                                        <button class="quantity-btn plus" data-product-id="@item.Product_id" data-cart-quantity="@item.CartQuantity">+</button>

                                    </td>
                                    <td class="product-total">@(item.Product_Price * @item.CartQuantity)</td>
                                </tr>
                                totalprice = totalprice + Convert.ToDouble(item.Product_Price);
                            }
                        </tbody>
                    </table>
                </div>
            </div>

            <div class="col-lg-4">
                <div class="total-section">
                    <table class="total-table">
                        <thead class="total-table-head">
                            <tr class="table-total-row">
                                <th>Total</th>
                                <th>Price</th>
                            </tr>
                        </thead>
                        <tbody>

                            @{double finalprice = totalprice; }
                            <tr class="total-data">
                                <td><strong>Subtotal: </strong></td>
                                <td>@totalprice JD</td>
                            </tr>
                            @if (totalprice >= 100)
                            {


                                <tr class="total-data">
                                    <td><strong>Shipping: </strong></td>
                                    <td>0</td>
                                </tr>
                            }
                            else
                            {
                                finalprice = totalprice + 15;
                                <tr class="total-data">
                                    <td><strong>Shipping: </strong></td>
                                    <td>15JD</td>
                                </tr>
                            }

                            <tr class="total-data">
                                <td><strong>Total: </strong></td>
                                <td>@finalprice JD</td>
                            </tr>

                        </tbody>
                    </table>
                    @if (Model.Count() > 0)
                    {
                        <div class="cart-buttons">
                            <a href="@Url.Action("CheckOut","Home","")" class="boxed-btn black" style="float:right">Check Out</a>
                        </div>}
                </div>


            </div>
        </div>
    </div>
</div>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>
    $(function () {
        // handle the "+" and "-" button clicks
        $('.quantity-btn').on('click', function () {
            var $btn = $(this);
            var productId = $btn.data('product-id');
            var cartQuantity = $btn.data('cart-quantity');

            if ($btn.hasClass('plus')) {
                cartQuantity++;
            } else {
                cartQuantity--;
            }

            // send an AJAX request to update the cart quantity
            $.ajax({
                url: '/Home/Cart',
                type: 'POST',
                data: { productId: productId, cartQuantity: cartQuantity },
                success: function (data) {
                    // update the quantity displayed in the cart view
                    $btn.siblings('.quantity').text(data.cartQuantity);

                    $btn.data('cart-quantity', data.cartQuantity);
                },
                error: function () {
                    alert('An error occurred while updating the cart quantity.');
                }
            });
            // update the cookie with the new quantity
            var cart = getCookie('cart');
            if (cart) {
                var items = cart.split('|');
                var newItems = [];

                for (var i = 0; i < items.length; i++) {
                    var id = items[i].split('_')[0];
                    var quantity = items[i].split('_')[1];

                    if (id == productId) {
                        quantity = cartQuantity;
                    }

                    newItems.push(id + '_' + quantity);
                }

                // set the updated cookie
                setCookie('cart', newItems.join('|'), 7);
            }

            // update the quantity displayed in the cart view
            $btn.siblings('.quantity').text(cartQuantity);
            $btn.data('cart-quantity', cartQuantity);
        });

        // helper functions to get and set cookies
        function getCookie(name) {
            var value = '; ' + document.cookie;
            var parts = value.split('; ' + name + '=');
            if (parts.length == 2) {
                return parts.pop().split(';').shift();
            }
        }

        function setCookie(name, value, days) {
            var expires = '';
            if (days) {
                var date = new Date();
                date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
                expires = '; expires=' + date.toGMTString();
            }
            document.cookie = name + '=' + value + expires + '; path=/';
        }
    });


</script>
